/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crud;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rongrong
 */
public class frmMain extends javax.swing.JFrame {

    /**
     * Creates new form frmMain
     */
    public frmMain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        nis = new javax.swing.JTextField();
        nama = new javax.swing.JTextField();
        kelas = new javax.swing.JTextField();
        nohp = new javax.swing.JTextField();
        alamat = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        hobi = new javax.swing.JTextField();
        ttl = new javax.swing.JTextField();
        lanang = new javax.swing.JRadioButton();
        wedok = new javax.swing.JRadioButton();
        save = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tData = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        nis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nisActionPerformed(evt);
            }
        });
        getContentPane().add(nis);
        nis.setBounds(200, 150, 280, 30);

        nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaActionPerformed(evt);
            }
        });
        getContentPane().add(nama);
        nama.setBounds(200, 220, 280, 30);

        kelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kelasActionPerformed(evt);
            }
        });
        getContentPane().add(kelas);
        kelas.setBounds(200, 290, 280, 30);

        nohp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nohpActionPerformed(evt);
            }
        });
        getContentPane().add(nohp);
        nohp.setBounds(200, 490, 280, 30);

        alamat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alamatActionPerformed(evt);
            }
        });
        getContentPane().add(alamat);
        alamat.setBounds(200, 430, 280, 30);

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });
        getContentPane().add(email);
        email.setBounds(630, 290, 280, 30);

        hobi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hobiActionPerformed(evt);
            }
        });
        getContentPane().add(hobi);
        hobi.setBounds(630, 220, 280, 30);

        ttl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ttlActionPerformed(evt);
            }
        });
        getContentPane().add(ttl);
        ttl.setBounds(200, 350, 280, 30);

        buttonGroup1.add(lanang);
        lanang.setText("Laki - Laki");
        getContentPane().add(lanang);
        lanang.setBounds(630, 160, 150, 23);

        buttonGroup1.add(wedok);
        wedok.setText("Perempuan");
        getContentPane().add(wedok);
        wedok.setBounds(800, 160, 150, 23);

        save.setBackground(new java.awt.Color(0, 153, 153));
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("SAVE");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        getContentPane().add(save);
        save.setBounds(630, 350, 130, 40);

        clear.setBackground(new java.awt.Color(0, 153, 153));
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("CLEAR");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear);
        clear.setBounds(790, 350, 130, 40);

        delete.setBackground(new java.awt.Color(0, 153, 153));
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete);
        delete.setBounds(790, 420, 130, 40);

        refresh.setBackground(new java.awt.Color(0, 153, 153));
        refresh.setForeground(new java.awt.Color(255, 255, 255));
        refresh.setText("REFRESH");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        getContentPane().add(refresh);
        refresh.setBounds(790, 480, 130, 40);

        edit.setBackground(new java.awt.Color(0, 153, 153));
        edit.setForeground(new java.awt.Color(255, 255, 255));
        edit.setText("EDIT");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        getContentPane().add(edit);
        edit.setBounds(630, 420, 130, 40);

        tData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NIS", "NAMA", "KELAS", "TTL", "ALAMAT", "NO HP", "JENIS KELAMIN", "HOBI", "EMAIL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tData);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(50, 580, 910, 200);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crud/Untitled-1.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -10, 1030, 560);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crud/Untitled-2.jpg"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 490, 1070, 420);

        setBounds(0, 0, 992, 881);
    }// </editor-fold>//GEN-END:initComponents

    private void nisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nisActionPerformed

    private void namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaActionPerformed

    private void kelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kelasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kelasActionPerformed

    private void nohpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nohpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nohpActionPerformed

    private void alamatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alamatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alamatActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void hobiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hobiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hobiActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        if("".equals(nis.getText()) || "".equals(alamat.getText()) || "".equals(kelas.getText())
            || "".equals(nama.getText()) || "".equals(email.getText()) || "".equals(hobi.getText()) ||
            "".equals(ttl.getText()) || "".equals(nohp.getText()))
        {
            JOptionPane.showMessageDialog(this, "Harap lengkapi Data", "Error", JOptionPane.WARNING_MESSAGE);
        }
        else {
            String JK ="";
            if (lanang.isSelected()){
                JK ="L";
            }else {
                JK ="P";
            }
            String SQL = "INSERT INTO tb_data (nis,nama,ttl,alamat,kelas,no_hp,jk,hobby,email) "
            + "VALUES ('"+nis.getText()+"','"+nama.getText()+"','"+ttl.getText()+"','"
            +alamat.getText()+"','"+kelas.getText()+"','"+nohp.getText()+"','"+JK+"','"
            +hobi.getText()+"','"+email.getText()+"')";
            int status = KoneksiDB.execute(SQL);
            if(status == 1){
                JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                selectData();
            }
            else{
                JOptionPane.showMessageDialog(this, "Data gagal ditambahkan", "Gagal", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        nama.setText("");
        nis.setText("");
        kelas.setText("");
        buttonGroup1.clearSelection();
        email.setText("");
        alamat.setText("");
        hobi.setText("");
        nohp.setText("");
        ttl.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int baris = tData.getSelectedRow();
        if(baris != -1){
            String NIS = tData.getValueAt(baris, 0).toString();
            String SQL = "DELETE FROM tb_data WHERE NIS='"+NIS+"'";
            int status = KoneksiDB.execute(SQL);
            if(status==1){
                JOptionPane.showMessageDialog(this, "Data berhasil dihapus", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, "Data gagal dihapus", "Gagal", JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Pilih baris data terlebih dahulu", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        selectData();
    }//GEN-LAST:event_refreshActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        if("".equals(nis.getText()) || "".equals(alamat.getText()) || "".equals(kelas.getText())
            || "".equals(nama.getText()) || "".equals(email.getText()) || "".equals(hobi.getText()) ||
            "".equals(ttl.getText()) || "".equals(nohp.getText()))
        {
            JOptionPane.showMessageDialog(this, "Harap Lengkapi Data", "Error", JOptionPane.WARNING_MESSAGE);
        }else{
            String JK = "";
            if(lanang.isSelected()){
                JK = "L";
            } else {
                JK = "P";
            }
            String SQL = "UPDATE tb_data SET "
            +"nama='"+nama.getText()+"', "
            +"ttl='"+ttl.getText()+"', "
            +"alamat='"+alamat.getText()+"', "
            +"kelas='"+kelas.getText()+"', "
            +"no_hp='"+nohp.getText()+"', "
            +"jk='"+JK+"', "
            +"hobby='"+hobi.getText()+"', "
            +"email='"+email.getText()+"' WHERE nis='"+nis.getText()+"'";
            int status = KoneksiDB.execute(SQL);
            if(status==1){
                JOptionPane.showMessageDialog(this, "Data berhasil diupdate", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                selectData();
            }else{
                JOptionPane.showMessageDialog(this, "Data gagal diupdate", "Sukses", JOptionPane.WARNING_MESSAGE);
            }
        }
        /*if("".equals(nis.getText()) || "".equals(alamat.getText()) || "".equals(kelas.getText()) ||
                "".equals(nama.getText()) || "".equals(email.getText()) || "".equals(nohp.getText())
                || "".equals(hobi.getText()) || "".equals(ttl.getText())){
            JOptionPane.showMessageDialog(this, "Harap Lengkapi Data", "Error", JOptionPane.WARNING_MESSAGE);
        }else{
            String JK = "";
            if(lanang.isSelected()){
                JK = "L";
            } else {
                JK = "P";
            }
            String SQL = "UPDATE tb_data SET "
                    +"nam='"+nama.getText()+"', "
                    +"JenisKelamin='"+JK+"', "
                    +"Kelas='"+kelas.getText()+"', "
                    +"Email='"+email.getText()+"', "
                    +"Alamat='"+alamat.getText()+"' WHERE NIS='"+nis.getText()+"'";
            int status = KoneksiDB.execute(SQL);
            if(status==1){
                JOptionPane.showMessageDialog(this, "Data berhasil diupdate", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                selectData();
            }else{
                JOptionPane.showMessageDialog(this, "Data gagal diupdate", "Sukses", JOptionPane.WARNING_MESSAGE);
            }
        }*/
    }//GEN-LAST:event_editActionPerformed

    private void tDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tDataMouseClicked
        // TODO add your handling code here:
        int baris = tData.getSelectedRow();
        if(baris != -1){
            nis.setText(tData.getValueAt(baris, 0).toString());
            nama.setText(tData.getValueAt(baris, 1).toString());
            kelas.setText(tData.getValueAt(baris, 2).toString());
            ttl.setText(tData.getValueAt(baris, 3).toString());
            alamat.setText(tData.getValueAt(baris, 4).toString());
            nohp.setText(tData.getValueAt(baris, 5).toString());
            if("Laki-Laki".equals(tData.getValueAt(baris, 6).toString())){
                lanang.setSelected(true);
            }else{
                wedok.setSelected(true);
            }
            hobi.setText(tData.getValueAt(baris, 7).toString());
            email.setText(tData.getValueAt(baris, 8).toString());
            
        }
    }//GEN-LAST:event_tDataMouseClicked

    private void ttlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ttlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ttlActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alamat;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JTextField email;
    private javax.swing.JTextField hobi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField kelas;
    private javax.swing.JRadioButton lanang;
    private javax.swing.JTextField nama;
    private javax.swing.JTextField nis;
    private javax.swing.JTextField nohp;
    private javax.swing.JButton refresh;
    private javax.swing.JButton save;
    private javax.swing.JTable tData;
    private javax.swing.JTextField ttl;
    private javax.swing.JRadioButton wedok;
    // End of variables declaration//GEN-END:variables

    private void selectData() {
         //To change body of generated methods, choose Tools | Templates.
         String kolom[]= {"nis","nama","ttl","alamat","kelas","no_hp","jk","hobby","email"};
         DefaultTableModel dtm = new DefaultTableModel(null, kolom);
         String SQL = "SELECT * FROM tb_data";
         ResultSet rs = KoneksiDB.executeQuery(SQL);
         try{
             while(rs.next()){
                 String NIS = rs.getString(1);
                 String NamaSiswa = rs.getString(2);
                 String TTL = rs.getString(3);
                 String Alamat = rs.getString(4);
                 String Kelas = rs.getString(5);
                 String NoHp = rs.getString(6);
                 String JenisKelamin ="";
                 if("L".equals(rs.getString(7))){
                     JenisKelamin = "Laki - Laki";
                 }else {
                     JenisKelamin = "Perempuan";
                 }
                 String Hobi = rs.getString(8);
                 String Email = rs.getString(9);
                 String data[]= {NIS,NamaSiswa,TTL,Alamat,Kelas,NoHp,JenisKelamin,Hobi,Email};
                 dtm.addRow(data);
             }
         }catch(SQLException ex){
             Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
         }
         tData.setModel(dtm);
    }
}
